;Kosul ifadeleri

;
;je    <label>	if <op1> == <op2>
;jne   <label>	if <op1> != <op2>

;jl    <label>	signed, if <op1> <  <op2>
;jle   <label>	signed, if <op1> <= <op2>
;jg    <label>	signed, if <op1> >	<op2>
;jge   <label>	signed, if <op1> >= <op2>

;jb    <label>	unsigned, if <op1> <  <op2>
;jbe   <label>	unsigned, if <op1> <= <op2>
;ja    <label>	unsigned, if <op1> >  <op2>
;jae   <label>	unsigned, if <op1> >= <op2> 

section .data
    ;currentNum  dq  0
    ;myMax       dq  0
    
    TRUE        equ 1
    FALSE       equ 0
    x           dd  0
    y           dd  0
    ans         dd  0
    errFlg      db  FALSE

section .text
global _start
_start:
    ;if(currentNum > myMax) 
    ;   myMax = currentNum;
    ;mov rax, qword[currentNum]
    ;cmp rax, qword[myMax] ; cmp komutu karşılaştırmayı yapar ve sonuc rFlag a atar jump komutu bu sonuca göre dallanır
    ;jle notNewMax
    ;mov qword[myMax], rax
;notNewMax:

    ;   if(x != 0) {
    ;       ans = x/y;
    ;       errFlg = FALSE;
    ;   }else {
    ;       ans = 0;
    ;       errFlg = TRUE;
    ;   }
    
    cmp dword[x], 0
    je  doElse
    mov eax, dword[x]
    cdq
    idiv dword[y]
    mov dword[ans], eax
    mov byte[errFlg], FALSE
    jmp skpElse
doElse:
    mov dword[ans], 0
    mov byte[errFlg], TRUE
    
skpElse:
    mov rax, 60
    mov rdi, 0
    syscall
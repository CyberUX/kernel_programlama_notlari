1-Sayıların bellekte gösterimi

			c karşılık		size bit		 unsigned range		sigded range	
Bytes         (char)        (8 bits)	2^8   0..255	        -128..+127

Words         (short)       (16 bits)   2^16  0..65,535         −32,768..+32,767

Double-words  (int,  		(32 bits)   2^32  0..4,294,967,295  −2,147,483,648..+2,147,483,647
				unsigned int,float long)
Quadword      (long         (64 bits)   2^64  0..2^64 -1        -2^63 -1..2^63 -1
				long, char *, int *, double)
Doublequadword				(128bits)   2^128 0..2^128-1        -2^127-1..2^127 -1

2-Bilgisayar tarafında aritmetik

	-negatif gösterim
		önce sayının 1 tamamlayanı alınır ardından elde ediler rakama 1 eklenir.
			örn. -40=-0000 0000 0010 1000 --> 1111 1111 1101 0111 --> 1111 1111 1101 1000 = 0xffd8
	-IEEE 32 bit floating point standart
		33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0
		s  x  x  x  x  x  x  x  x  x  x  o  o  o  o  o  o  o  o  o  o  o  o  o  o o o o o o o o o o
	
	s->işaret biti sayı negatif mi pozitif mi
	x->exponent (üst) biti (sayının bilimsel gösterimindeki üssüne 127 ekleyim binary halini buraya yaz)
	o->fraction or mantisa(kesir) biti (sayının bilimsel gösterimindei 1.ooo şeklinde virgülden sonraki kesirli hali burya yaz)
		örn. -7.75= -0111.1100 -->bilimsel gösterim -1.1111x2^2 
				s = 1 -olduğundan
				x = 2 + 127 = 129  1000 0001 -> x kısmı
				o = 1.1111 den 1111
				1 10000001 11110000000000000000000
				1100 0000 1111 1000 0000 0000 0000 0000
	(64 bit gösterimde 64 bit işaret 63-53 üs 52-0 kesir gösterilir.

2- gdb temel komutlar
	gdb de denetleme  yapabilmek için programı derlerken -g parametresi vermemiz gerekiyor.

list : yazılı olan kodumuzu satırlarıyla birlikte gösterir.
disassemble : kodun asemblly karşılığını gösterir
breakpoint num: nolu yere breakpoint koyar
run : programı çalıştırır.
next : breakpointen bir sonraki adıma geçer.
info registers : tüm registerları gösterir.
info registers rip : ilgili registerin içeriğini gösterir.
info vector :
info os cpus: işlemci özelliklerini belirtir
info os modules : yüklü kernel modulleri
ctrl l: sayfayı temizler
!ls : ! shell komutu çalıştırılmasını sağlar
print value : value inin değerini gösterir.
display val/reg : değeri gösterir ve run next denilince terar gösterir.
x/<n><f><u> $rsp
x/<n><f><u> &<variable> içindeki değeri denetle
	x/examine memory location
	<n> gösterilecek yerin numarası
	<f> format 
		d-decimal (signed)
		x-hex
		u-decimal (unsigned)
		c-char
		s-string
		f-floating point
	<u> unint size 
		b-byte 8-bit
		h-halfword 16-bit
		w word	32
		g-giant 64 (örn: x/db $val1, x/s $val2i, x/6ug $rsp) üsteki 6 itemi göster
set logging file <filename> : log kaydı oluştur. defaul gdb.txt



gcc -fno-stack-protector -z execstack merhaba.c derleme için
echo -n "char code = \""; for i in $(objdump -d son |grep "^ " |cut -f2); do echo -n '\x'$i; done; echo -n "\";"; > denek.c direk malum şekilde yazdırmak için
nasm -f elf64 denek.asm  ld denek.o -o denek derlemek için


